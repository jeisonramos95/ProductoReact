[{"C:\\Users\\ASUS\\Desktop\\Jeison\\react-products\\src\\redux\\store.ts":"1","C:\\Users\\ASUS\\Desktop\\Jeison\\react-products\\src\\components\\ModalCategory\\modal-category.component.tsx":"2","C:\\Users\\ASUS\\Desktop\\Jeison\\react-products\\src\\redux\\reducers\\products.reducer.ts":"3","C:\\Users\\ASUS\\Desktop\\Jeison\\react-products\\src\\pages\\home\\home.tsx":"4","C:\\Users\\ASUS\\Desktop\\Jeison\\react-products\\src\\redux\\actions\\products.actions.ts":"5","C:\\Users\\ASUS\\Desktop\\Jeison\\react-products\\src\\components\\ModalRegister\\modal-register.componet.tsx":"6","C:\\Users\\ASUS\\Desktop\\Jeison\\react-products\\src\\components\\CardCategory\\card-category.component.tsx":"7","C:\\Users\\ASUS\\Desktop\\Jeison\\react-products\\src\\index.tsx":"8","C:\\Users\\ASUS\\Desktop\\Jeison\\react-products\\src\\utils\\constants.ts":"9"},{"size":321,"mtime":1606767739502,"results":"10","hashOfConfig":"11"},{"size":2959,"mtime":1606778527987,"results":"12","hashOfConfig":"11"},{"size":561,"mtime":1606767739502,"results":"13","hashOfConfig":"11"},{"size":5114,"mtime":1606770935989,"results":"14","hashOfConfig":"11"},{"size":5339,"mtime":1606779042058,"results":"15","hashOfConfig":"11"},{"size":3273,"mtime":1606789622726,"results":"16","hashOfConfig":"11"},{"size":2610,"mtime":1606778454250,"results":"17","hashOfConfig":"11"},{"size":753,"mtime":1606767739498,"results":"18","hashOfConfig":"11"},{"size":342,"mtime":1606767739504,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1bjrnzk",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ASUS\\Desktop\\Jeison\\react-products\\src\\redux\\store.ts",["40"],"C:\\Users\\ASUS\\Desktop\\Jeison\\react-products\\src\\components\\ModalCategory\\modal-category.component.tsx",[],"C:\\Users\\ASUS\\Desktop\\Jeison\\react-products\\src\\redux\\reducers\\products.reducer.ts",["41"],"C:\\Users\\ASUS\\Desktop\\Jeison\\react-products\\src\\pages\\home\\home.tsx",["42","43","44"],"C:\\Users\\ASUS\\Desktop\\Jeison\\react-products\\src\\redux\\actions\\products.actions.ts",["45","46","47","48"],"import { GET_PRODUCTS } from '../types/products.types';\r\nimport { API_CATEGORIES_URL, API_PRODUCTS_URL, API_USERS_URL } from '../../utils/constants';\r\nimport axios from 'axios';\r\nimport { ICategory, IProductResponse } from '../../components/CardCategory/card-category.component';\r\nimport { IconType } from 'antd/lib/notification';\r\nimport { IUser } from '../../models/user.model';\r\nimport Password from 'antd/lib/input/Password';\r\n\r\nexport const getProducts = (idUser: string) => async (dispatch: any) => {\r\n    const response = await axios.get(API_PRODUCTS_URL + 'getProductsByUser?idUser=' + idUser);\r\n    const categories: ICategory[] = response.data.result;\r\n\r\n    categories.sort((a: ICategory, b: ICategory) => {\r\n        return a.name > b.name ? 1 : -1;\r\n    });\r\n    console.log(categories)\r\n    dispatch({\r\n        type: GET_PRODUCTS,\r\n        payload: categories,\r\n    });\r\n};\r\n\r\nexport const deleteProduct = (idProduct: string, idUser: string) => async (dispatch: any) => {\r\n    const response1 = await axios.post(API_PRODUCTS_URL + 'deleteProduct', {\r\n        idProduct\r\n    });\r\n    if (response1.data.status === 200) {\r\n        const response = await axios.get(API_PRODUCTS_URL + 'getProductsByUser?idUser=' + idUser);\r\n        const categories: ICategory[] = response.data.result;\r\n        categories.sort((a: ICategory, b: ICategory) => {\r\n            return a.products?.length === 0 ? 1 : -1;\r\n        });\r\n\r\n        dispatch({\r\n            type: GET_PRODUCTS,\r\n            payload: categories,\r\n        });\r\n    }\r\n}\r\n\r\nexport const editProduct = (product: IProductResponse, idUser: string) => async (dispatch: any) => {\r\n    const response1 = await axios.post(API_PRODUCTS_URL + 'editProduct', {\r\n        idCategory: product.idCategory,\r\n        name: product.name,\r\n        price: product.price,\r\n        description: product.description,\r\n        disStock: product.disStock,\r\n        _id: product._id\r\n    });\r\n    if (response1.data.status === 200) {\r\n        const response = await axios.get(API_PRODUCTS_URL + 'getProductsByUser?idUser=' + idUser);\r\n        const categories: ICategory[] = response.data.result;\r\n        categories.sort((a: ICategory, b: ICategory) => {\r\n            return a.products?.length === 0 ? 1 : -1;\r\n        });\r\n\r\n        dispatch({\r\n            type: GET_PRODUCTS,\r\n            payload: categories,\r\n        });\r\n    }\r\n}\r\n\r\nexport const createProduct = (product: IProductResponse, idUser: string) => async (dispatch: any) => {\r\n    const response1 = await axios.post(API_PRODUCTS_URL + 'createProduct', {\r\n        idCategory: product.idCategory,\r\n        name: product.name,\r\n        price: product.price,\r\n        description: product.description,\r\n        disStock: product.disStock\r\n    });\r\n    if (response1.data.status === 200) {\r\n        const response = await axios.get(API_PRODUCTS_URL + 'getProductsByUser?idUser=' + idUser);\r\n        const categories: ICategory[] = response.data.result;\r\n        categories.sort((a: ICategory, b: ICategory) => {\r\n            return a.products?.length === 0 ? 1 : -1;\r\n        });\r\n\r\n        dispatch({\r\n            type: GET_PRODUCTS,\r\n            payload: categories,\r\n        });\r\n    }\r\n}\r\n\r\nexport const editCategory = (category: ICategory) => async (dispatch: any ) =>{\r\n    console.log(category);\r\n    const response1 = await axios.post(API_CATEGORIES_URL + 'editCategory',{\r\n        _id: category._id,\r\n        idUser: category.idUser,\r\n        name: category.name,\r\n        description: category.description\r\n    });if (response1.data.status === 200) {\r\n        const response = await axios.get(API_PRODUCTS_URL + 'getProductsByUser?idUser=' + category.idUser);\r\n        const categories: ICategory[] = response.data.result;\r\n\r\n        categories.sort((a: ICategory, b: ICategory) => {\r\n            return a.products?.length === 0 ? 1 : -1;\r\n        });\r\n\r\n        dispatch({\r\n            type: GET_PRODUCTS,\r\n            payload: categories,\r\n        });\r\n    }\r\n}\r\nexport const createCategory = (category: ICategory, idUser: string) => async (dispatch: any ) =>{\r\n    const response1 = await axios.post(API_CATEGORIES_URL + 'createCategory',{\r\n        idUser,\r\n        name: category.name,\r\n        description: category.description\r\n    });if (response1.data.status === 200) {\r\n        const response = await axios.get(API_PRODUCTS_URL + 'getProductsByUser?idUser=' + idUser);\r\n        const categories: ICategory[] = response.data.result;\r\n        categories.sort((a: ICategory, b: ICategory) => {\r\n            return a.products?.length === 0 ? 1 : -1;\r\n        });\r\n\r\n        dispatch({\r\n            type: GET_PRODUCTS,\r\n            payload: categories,\r\n        });\r\n    }\r\n}\r\nexport const deleteCategory = (idCategory: string, idUser: string) => async (dispatch: any) => {\r\n    const response1 = await axios.post(API_PRODUCTS_URL + 'deleteCategory', {\r\n        idCategory\r\n    });\r\n    if (response1.data.status === 200) {\r\n        const response = await axios.get(API_PRODUCTS_URL + 'getProductsByUser?idUser=' + idUser);\r\n        const categories: ICategory[] = response.data.result;\r\n        categories.sort((a: ICategory, b: ICategory) => {\r\n            return a.products?.length === 0 ? 1 : -1;\r\n        });\r\n\r\n        dispatch({\r\n            type: GET_PRODUCTS,\r\n            payload: categories,\r\n        });\r\n    }\r\n}","C:\\Users\\ASUS\\Desktop\\Jeison\\react-products\\src\\components\\ModalRegister\\modal-register.componet.tsx",["49"],"C:\\Users\\ASUS\\Desktop\\Jeison\\react-products\\src\\components\\CardCategory\\card-category.component.tsx",["50"],"import React, { useState } from 'react';\r\nimport { deleteProduct } from '../../redux/actions/products.actions';\r\nimport DetailProduct from '../DetailProduct/detail-product.component';\r\nimport ModalCategory from '../ModalCategory/modal-category.component';\r\nimport ModalProduct from '../ModalProduct/modal-product.component';\r\n\r\nexport interface ICategory {\r\n    _id: string;\r\n    idUser: string;\r\n    name: string;\r\n    description: string;\r\n    products?: IProductResponse[];\r\n}\r\n\r\nexport interface IProductResponse {\r\n    _id: string;\r\n    name: string;\r\n    price: number;\r\n    description: string;\r\n    disStock: number;\r\n    idCategory: string;\r\n}\r\n\r\nfunction CardCategory(props: any) {\r\n\r\n    const category: ICategory = props.category;\r\n\r\n    const product: IProductResponse = {\r\n        _id: '',\r\n        name: '',\r\n        price: 0,\r\n        description: '',\r\n        disStock: 0,\r\n        idCategory: category._id\r\n    }\r\n \r\n    const [modal, setModal] = useState(false);\r\n\r\n    const [modal1, setModal1] = useState(false);\r\n\r\n    const toggle = () => setModal(!modal);\r\n\r\n    const toggle1 = () => setModal1(!modal1);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"card my-3 mx-3\" >\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{category.name}</h5>\r\n                    <p className=\"card-text\">{category.description}</p>\r\n                    <button onClick={toggle}>Create Product</button>\r\n                    <button onClick={toggle1}>Edit Category</button>\r\n                    <ModalCategory\r\n                    dispatch={props.dispatch}\r\n                    category={category}\r\n                    modal={modal1}\r\n                    toggle={toggle1}\r\n                    create={false} />\r\n                </div>\r\n                <ul className=\"list-group list-group-flush\">\r\n                    {\r\n                        category.products?.map((val: IProductResponse, index: any) => {\r\n                            return (\r\n                                <div key={index}>\r\n                                    <DetailProduct dispatch={props.dispatch} product={val} />\r\n                                </div>\r\n                            );\r\n                        })\r\n                    }\r\n                </ul>\r\n                <ModalProduct \r\n                dispatch={props.dispatch} \r\n                product={product} \r\n                modal={modal} \r\n                toggle={toggle} \r\n                create={true}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardCategory;","C:\\Users\\ASUS\\Desktop\\Jeison\\react-products\\src\\index.tsx",[],"C:\\Users\\ASUS\\Desktop\\Jeison\\react-products\\src\\utils\\constants.ts",[],{"ruleId":"51","severity":1,"message":"52","line":1,"column":40,"nodeType":"53","messageId":"54","endLine":1,"endColumn":47},{"ruleId":"55","severity":1,"message":"56","line":10,"column":1,"nodeType":"57","endLine":22,"endColumn":2},{"ruleId":"51","severity":1,"message":"58","line":5,"column":39,"nodeType":"53","messageId":"54","endLine":5,"endColumn":49},{"ruleId":"59","severity":1,"message":"60","line":42,"column":8,"nodeType":"61","endLine":42,"endColumn":20,"suggestions":"62"},{"ruleId":"51","severity":1,"message":"63","line":60,"column":15,"nodeType":"53","messageId":"54","endLine":60,"endColumn":28},{"ruleId":"51","severity":1,"message":"64","line":2,"column":48,"nodeType":"53","messageId":"54","endLine":2,"endColumn":61},{"ruleId":"51","severity":1,"message":"65","line":5,"column":10,"nodeType":"53","messageId":"54","endLine":5,"endColumn":18},{"ruleId":"51","severity":1,"message":"66","line":6,"column":10,"nodeType":"53","messageId":"54","endLine":6,"endColumn":15},{"ruleId":"51","severity":1,"message":"67","line":7,"column":8,"nodeType":"53","messageId":"54","endLine":7,"endColumn":16},{"ruleId":"51","severity":1,"message":"66","line":4,"column":10,"nodeType":"53","messageId":"54","endLine":4,"endColumn":15},{"ruleId":"51","severity":1,"message":"68","line":2,"column":10,"nodeType":"53","messageId":"54","endLine":2,"endColumn":23},"@typescript-eslint/no-unused-vars","'compose' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'NavbarText' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'history', and 'userInfo'. Either include them or remove the dependency array.","ArrayExpression",["69"],"'requestDelete' is assigned a value but never used.","'API_USERS_URL' is defined but never used.","'IconType' is defined but never used.","'IUser' is defined but never used.","'Password' is defined but never used.","'deleteProduct' is defined but never used.",{"desc":"70","fix":"71"},"Update the dependencies array to be: [categories, dispatch, history, userInfo]",{"range":"72","text":"73"},[1624,1636],"[categories, dispatch, history, userInfo]"]